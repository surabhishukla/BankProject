{
  "_args": [
    [
      {
        "raw": "compression-webpack-plugin@4.0.1",
        "scope": null,
        "escapedName": "compression-webpack-plugin",
        "name": "compression-webpack-plugin",
        "rawSpec": "4.0.1",
        "spec": "4.0.1",
        "type": "version"
      },
      "/home/incs83/Swagger"
    ]
  ],
  "_from": "compression-webpack-plugin@4.0.1",
  "_hasShrinkwrap": false,
  "_id": "compression-webpack-plugin@4.0.1",
  "_location": "/compression-webpack-plugin",
  "_nodeVersion": "10.15.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/compression-webpack-plugin_4.0.1_1597241634718_0.45047396420637864"
  },
  "_npmUser": {
    "name": "evilebottnawi",
    "email": "sheo13666q@gmail.com"
  },
  "_npmVersion": "6.14.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "compression-webpack-plugin@4.0.1",
    "scope": null,
    "escapedName": "compression-webpack-plugin",
    "name": "compression-webpack-plugin",
    "rawSpec": "4.0.1",
    "spec": "4.0.1",
    "type": "version"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/compression-webpack-plugin/-/compression-webpack-plugin-4.0.1.tgz",
  "_shasum": "33eda97f1170dd38c5556771de10f34245aa0274",
  "_shrinkwrap": null,
  "_spec": "compression-webpack-plugin@4.0.1",
  "_where": "/home/incs83/Swagger",
  "author": {
    "name": "Tobias Koppers @sokra"
  },
  "bugs": {
    "url": "https://github.com/webpack-contrib/compression-webpack-plugin/issues"
  },
  "dependencies": {
    "cacache": "^15.0.5",
    "find-cache-dir": "^3.3.1",
    "schema-utils": "^2.7.0",
    "serialize-javascript": "^4.0.0",
    "webpack-sources": "^1.4.3"
  },
  "description": "Prepare compressed versions of assets to serve them with Content-Encoding",
  "devDependencies": {
    "@babel/cli": "^7.10.5",
    "@babel/core": "^7.11.1",
    "@babel/preset-env": "^7.11.0",
    "@commitlint/cli": "^9.1.2",
    "@commitlint/config-conventional": "^9.1.1",
    "@gfx/zopfli": "^1.0.15",
    "@webpack-contrib/defaults": "^6.3.0",
    "@webpack-contrib/eslint-config-webpack": "^3.0.0",
    "babel-jest": "^26.3.0",
    "cross-env": "^7.0.2",
    "del": "^5.1.0",
    "del-cli": "^3.0.1",
    "eslint": "^7.6.0",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-import": "^2.22.0",
    "file-loader": "^6.0.0",
    "husky": "^4.2.5",
    "jest": "^26.3.0",
    "lint-staged": "^10.2.11",
    "memfs": "^3.2.0",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.0.5",
    "standard-version": "^8.0.2",
    "webpack": "^4.44.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-0mg6PgwTsUe5LEcUrOu3ob32vraDx2VdbMGAT1PARcOV+UJWDYZFdkSo6RbHoGQ061mmmkC7XpRKOlvwm/gzJQ==",
    "shasum": "33eda97f1170dd38c5556771de10f34245aa0274",
    "tarball": "https://registry.npmjs.org/compression-webpack-plugin/-/compression-webpack-plugin-4.0.1.tgz",
    "fileCount": 9,
    "unpackedSize": 41303,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJfM/kjCRA9TVsSAnZWagAALmAP/1w9wqR7y1LPoqthD2Zz\nBnzuystgWit08S1f0qKtKbdwMr0+yphEojtL2iKReeYfNZNH5zN75ursrs7u\nfIXIXj1jGJvUtXp1rVD1itzDnEcEntWauuPaRqV0mEfZxSpceofmh8bZpfpU\n46SM/epkYlkOUsHYJa0kN3asznfiTJqAwyMlQ/EcuV9xcqqt0VcUpVcf6Cn/\nU/KmE33CHsLbLNKnhv0mrcfHtNShPO+/AoM9wxt1fal5Hb78zo8YW3A4M1G7\nGqp0XEzvcYBkslsqysDpIVyAslderTlfrKCd2z0nUQD6lhElsXt3PWvC9ex9\ngam8PNDUBIBUC7fJ8B0POgN9uvgUwBOaRZI+cLJHC5HyukYmYB7t2Vs5txxL\nv3vxVCQSCDr9QyrCbh1M4aDAlHk17q2+TIrgu/eqdz+TYF5tzXfXf2L80rQ0\nwwNBjBpzAL9qq0c1qbRoR9jxc5XrxI5hopZSVcLr8G0peCAhq9ltpYDPqszl\n3mpGICuO1pD4dJT+TEKTGAphPktXBTHASI8I9njfNdJohxxpRoyXlQ2XUn4W\njgzF23IEX18GC2htnaqNh0yOop7rkJLRoZnvWM1eHlxFzGkIM1e66MrgqdgU\n7zQ7k48QMcrO9tB0i0SSzO+p50XxhPLLJj/QKUOZ2y72HYoLAd6SavfnTMoQ\nM1xb\r\n=tdXc\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 10.13.0"
  },
  "files": [
    "dist"
  ],
  "funding": {
    "type": "opencollective",
    "url": "https://opencollective.com/webpack"
  },
  "gitHead": "7de0317bf9cd45a96c89f7b79414e7ef2760562a",
  "homepage": "https://github.com/webpack-contrib/compression-webpack-plugin",
  "keywords": [
    "webpack"
  ],
  "license": "MIT",
  "main": "dist/cjs.js",
  "maintainers": [
    {
      "name": "bebraw",
      "email": "bebraw@gmail.com"
    },
    {
      "name": "d3viant0ne",
      "email": "wiens.joshua@gmail.com"
    },
    {
      "name": "ericclemmons",
      "email": "eric@smarterspam.com"
    },
    {
      "name": "evilebottnawi",
      "email": "sheo13666q@gmail.com"
    },
    {
      "name": "jhnns",
      "email": "mail@johannesewald.de"
    },
    {
      "name": "michael-ciniawsky",
      "email": "michael.ciniawsky@gmail.com"
    },
    {
      "name": "sokra",
      "email": "tobias.koppers@googlemail.com"
    },
    {
      "name": "thelarkinn",
      "email": "sean.larkin@cuw.edu"
    }
  ],
  "name": "compression-webpack-plugin",
  "optionalDependencies": {},
  "peerDependencies": {
    "webpack": "^4.0.0 || ^5.0.0"
  },
  "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![cover][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# compression-webpack-plugin\n\nPrepare compressed versions of assets to serve them with Content-Encoding.\n\n## Getting Started\n\nTo begin, you'll need to install `compression-webpack-plugin`:\n\n```console\n$ npm install compression-webpack-plugin --save-dev\n```\n\nThen add the plugin to your `webpack` config. For example:\n\n**webpack.config.js**\n\n```js\nconst CompressionPlugin = require('compression-webpack-plugin');\n\nmodule.exports = {\n  plugins: [new CompressionPlugin()],\n};\n```\n\nAnd run `webpack` via your preferred method.\n\n## Options\n\n|                      Name                       |                   Type                    |      Default       | Description                                                                                                   |\n| :---------------------------------------------: | :---------------------------------------: | :----------------: | :------------------------------------------------------------------------------------------------------------ |\n|               **[`test`](#test)**               | `{String\\|RegExp\\|Array<String\\|RegExp>}` |    `undefined`     | Include all assets that pass test assertion                                                                   |\n|            **[`include`](#include)**            | `{String\\|RegExp\\|Array<String\\|RegExp>}` |    `undefined`     | Include all assets matching any of these conditions                                                           |\n|            **[`exclude`](#exclude)**            | `{String\\|RegExp\\|Array<String\\|RegExp>}` |    `undefined`     | Exclude all assets matching any of these conditions                                                           |\n|          **[`algorithm`](#algorithm)**          |           `{String\\|Function}`            |       `gzip`       | The compression algorithm/function                                                                            |\n| **[`compressionOptions`](#compressionoptions)** |                `{Object}`                 |   `{ level: 9 }`   | Compression options for `algorithm`                                                                           |\n|          **[`threshold`](#threshold)**          |                `{Number}`                 |        `0`         | Only assets bigger than this size are processed (in bytes)                                                    |\n|           **[`minRatio`](#minratio)**           |                `{Number}`                 |       `0.8`        | Only assets that compress better than this ratio are processed (`minRatio = Compressed Size / Original Size`) |\n|           **[`filename`](#filename)**           |           `{String\\|Function}`            | `[path].gz[query]` | The target asset filename.                                                                                    |\n|              **[`cache`](#cache)**              |                `{Boolean}`                |       `true`       | Enable file caching                                                                                           |\n\n### `test`\n\nType: `String|RegExp|Array<String|RegExp>`\nDefault: `undefined`\n\nInclude all assets that pass test assertion.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      test: /\\.js(\\?.*)?$/i,\n    }),\n  ],\n};\n```\n\n### `include`\n\nType: `String|RegExp|Array<String|RegExp>`\nDefault: `undefined`\n\nInclude all assets matching any of these conditions.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      include: /\\/includes/,\n    }),\n  ],\n};\n```\n\n### `exclude`\n\nType: `String|RegExp|Array<String|RegExp>`\nDefault: `undefined`\n\nExclude all assets matching any of these conditions.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      exclude: /\\/excludes/,\n    }),\n  ],\n};\n```\n\n### `algorithm`\n\nType: `String|Function`\nDefault: `gzip`\n\nThe compression algorithm/function.\n\n#### `String`\n\nThe algorithm is taken from [zlib](https://nodejs.org/api/zlib.html).\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      algorithm: 'gzip',\n    }),\n  ],\n};\n```\n\n#### `Function`\n\nAllow to specify a custom compression function.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      algorithm(input, compressionOptions, callback) {\n        return compressionFunction(input, compressionOptions, callback);\n      },\n    }),\n  ],\n};\n```\n\n### `compressionOptions`\n\nType: `Object`\nDefault: `{ level: 9 }`\n\nCompression options for `algorithm`.\n\nIf you use custom function for the `algorithm` option, the default value is `{}`.\n\nYou can find all options here [zlib](https://nodejs.org/api/zlib.html#zlib_class_options).\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      compressionOptions: { level: 1 },\n    }),\n  ],\n};\n```\n\n### `threshold`\n\nType: `Number`\nDefault: `0`\n\nOnly assets bigger than this size are processed. In bytes.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      threshold: 8192,\n    }),\n  ],\n};\n```\n\n### `minRatio`\n\nType: `Number`\nDefault: `0.8`\n\nOnly assets that compress better than this ratio are processed (`minRatio = Compressed Size / Original Size`).\nExample: you have `image.png` file with 1024b size, compressed version of file has 768b size, so `minRatio` equal `0.75`.\nIn other words assets will be processed when the `Compressed Size / Original Size` value less `minRatio` value.\nYou can use `1` value to process assets that are smaller than the original. Use a value of Number.MAX_SAFE_INTEGER to process all assets even if they are larger than the original (useful when you are pre-zipping all assets for AWS)\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      minRatio: 0.8,\n    }),\n  ],\n};\n```\n\n### `filename`\n\nType: `String|Function`\nDefault: `[path].gz[query]`\n\nThe target asset filename.\n\n#### `String`\n\n`[file]` is replaced with the original asset filename.\n`[path]` is replaced with the path of the original asset.\n`[dir]` is replaced with the directory of the original asset.\n`[name]` is replaced with the filename of the original asset.\n`[ext]` is replaced with the extension of the original asset.\n`[query]` is replaced with the query.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      filename: '[path].gz[query]',\n    }),\n  ],\n};\n```\n\n#### `Function`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      filename(info) {\n        // info.file is the original asset filename\n        // info.path is the path of the original asset\n        // info.query is the query\n        return `${info.path}.gz${info.query}`;\n      },\n    }),\n  ],\n};\n```\n\n### `deleteOriginalAssets`\n\nType: `Boolean`\nDefault: `false`\n\nWhether to delete the original assets or not.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      deleteOriginalAssets: true,\n    }),\n  ],\n};\n```\n\n### `cache`\n\n> ⚠ Ignored in webpack 5! Please use https://webpack.js.org/configuration/other-options/#cache.\n\nType: `Boolean|String`\nDefault: `true`\n\nEnable file caching.\nThe default path to cache directory: `node_modules/.cache/compression-webpack-plugin`.\n\n#### `Boolean`\n\nEnable/disable file caching.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      cache: true,\n    }),\n  ],\n};\n```\n\n#### `String`\n\nEnable file caching and set path to cache directory.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      cache: 'path/to/cache',\n    }),\n  ],\n};\n```\n\n## Examples\n\n### Using Zopfli\n\nPrepare compressed versions of assets using `zopfli` library.\n\n> ℹ️ `@gfx/zopfli` require minimum `8` version of `node`.\n\nTo begin, you'll need to install `@gfx/zopfli`:\n\n```console\n$ npm install @gfx/zopfli --save-dev\n```\n\n**webpack.config.js**\n\n```js\nconst zopfli = require('@gfx/zopfli');\n\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      compressionOptions: {\n        numiterations: 15,\n      },\n      algorithm(input, compressionOptions, callback) {\n        return zopfli.gzip(input, compressionOptions, callback);\n      },\n    }),\n  ],\n};\n```\n\n### Using Brotli\n\n[Brotli](https://en.wikipedia.org/wiki/Brotli) is a compression algorithm originally developed by Google, and offers compression superior to gzip.\n\nNode 10.16.0 and later has [native support](https://nodejs.org/api/zlib.html#zlib_zlib_createbrotlicompress_options) for Brotli compression in its zlib module.\n\nWe can take advantage of this built-in support for Brotli in Node 10.16.0 and later by just passing in the appropriate `algorithm` to the CompressionPlugin:\n\n**webpack.config.js**\n\n```js\nconst zlib = require('zlib');\n\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      filename: '[path].br[query]',\n      algorithm: 'brotliCompress',\n      test: /\\.(js|css|html|svg)$/,\n      compressionOptions: {\n        // zlib’s `level` option matches Brotli’s `BROTLI_PARAM_QUALITY` option.\n        level: 11,\n      },\n      threshold: 10240,\n      minRatio: 0.8,\n      deleteOriginalAssets: false,\n    }),\n  ],\n};\n```\n\n**Note** The `level` option matches `BROTLI_PARAM_QUALITY` [for Brotli-based streams](https://nodejs.org/api/zlib.html#zlib_for_brotli_based_streams)\n\n### Multiple compressed versions of assets for different algorithm\n\n**webpack.config.js**\n\n```js\nconst zlib = require('zlib');\n\nmodule.exports = {\n  plugins: [\n    new CompressionPlugin({\n      filename: '[path].gz[query]',\n      algorithm: 'gzip',\n      test: /\\.js$|\\.css$|\\.html$/,\n      threshold: 10240,\n      minRatio: 0.8,\n    }),\n    new CompressionPlugin({\n      filename: '[path].br[query]',\n      algorithm: 'brotliCompress',\n      test: /\\.(js|css|html|svg)$/,\n      compressionOptions: {\n        level: 11,\n      },\n      threshold: 10240,\n      minRatio: 0.8,\n    }),\n  ],\n};\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/compression-webpack-plugin.svg\n[npm-url]: https://npmjs.com/package/compression-webpack-plugin\n[node]: https://img.shields.io/node/v/compression-webpack-plugin.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/compression-webpack-plugin.svg\n[deps-url]: https://david-dm.org/webpack-contrib/compression-webpack-plugin\n[tests]: https://github.com/webpack-contrib/compression-webpack-plugin/workflows/compression-webpack-plugin/badge.svg\n[tests-url]: https://github.com/webpack-contrib/compression-webpack-plugin/actions\n[cover]: https://codecov.io/gh/webpack-contrib/compression-webpack-plugin/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/compression-webpack-plugin\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=compression-webpack-plugin\n[size-url]: https://packagephobia.now.sh/result?p=compression-webpack-plugin\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webpack-contrib/compression-webpack-plugin.git"
  },
  "scripts": {
    "build": "cross-env NODE_ENV=production babel src -d dist --copy-files",
    "clean": "del-cli dist",
    "commitlint": "commitlint --from=master",
    "defaults": "webpack-defaults",
    "lint": "npm-run-all -l -p \"lint:**\"",
    "lint:js": "eslint --cache .",
    "lint:prettier": "prettier --list-different .",
    "prebuild": "npm run clean",
    "prepare": "npm run build",
    "pretest": "npm run lint",
    "release": "standard-version",
    "security": "npm audit",
    "start": "npm run build -- -w",
    "test": "npm run test:coverage",
    "test:coverage": "npm run test:only -- --collectCoverageFrom=\"src/**/*.js\" --coverage",
    "test:only": "cross-env NODE_ENV=test jest",
    "test:watch": "npm run test:only -- --watch"
  },
  "version": "4.0.1"
}
