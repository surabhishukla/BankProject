{
  "_args": [
    [
      {
        "raw": "@polymer/iron-list@3.1.0",
        "scope": "@polymer",
        "escapedName": "@polymer%2firon-list",
        "name": "@polymer/iron-list",
        "rawSpec": "3.1.0",
        "spec": "3.1.0",
        "type": "version"
      },
      "/home/incs83/Swagger"
    ]
  ],
  "_from": "@polymer/iron-list@3.1.0",
  "_hasShrinkwrap": false,
  "_id": "@polymer/iron-list@3.1.0",
  "_location": "/@polymer/iron-list",
  "_nodeVersion": "12.13.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/iron-list_3.1.0_1572567391721_0.4555725119148062"
  },
  "_npmUser": {
    "name": "azakus",
    "email": "dfreedm2@gmail.com"
  },
  "_npmVersion": "6.12.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@polymer/iron-list@3.1.0",
    "scope": "@polymer",
    "escapedName": "@polymer%2firon-list",
    "name": "@polymer/iron-list",
    "rawSpec": "3.1.0",
    "spec": "3.1.0",
    "type": "version"
  },
  "_requiredBy": [
    "/",
    "/@vaadin/vaadin-combo-box"
  ],
  "_resolved": "https://registry.npmjs.org/@polymer/iron-list/-/iron-list-3.1.0.tgz",
  "_shasum": "9b525249a90a53b6ae249330640b54b12141202a",
  "_shrinkwrap": null,
  "_spec": "@polymer/iron-list@3.1.0",
  "_where": "/home/incs83/Swagger",
  "author": {
    "name": "The Polymer Authors"
  },
  "bugs": {
    "url": "https://github.com/PolymerElements/iron-list/issues"
  },
  "dependencies": {
    "@polymer/iron-a11y-keys-behavior": "^3.0.0-pre.26",
    "@polymer/iron-resizable-behavior": "^3.0.0-pre.26",
    "@polymer/iron-scroll-target-behavior": "^3.0.0-pre.26",
    "@polymer/polymer": "^3.0.0"
  },
  "description": "Displays a virtual, 'infinite' scrolling list of items",
  "devDependencies": {
    "@polymer/app-layout": "^3.0.0-pre.26",
    "@polymer/gen-typescript-declarations": "^1.5.1",
    "@polymer/iron-ajax": "^3.0.0-pre.26",
    "@polymer/iron-flex-layout": "^3.0.0-pre.26",
    "@polymer/iron-icon": "^3.0.0-pre.26",
    "@polymer/iron-icons": "^3.0.0-pre.26",
    "@polymer/iron-image": "^3.0.0-pre.26",
    "@polymer/iron-scroll-threshold": "^3.0.0-pre.26",
    "@polymer/iron-test-helpers": "^3.0.0-pre.26",
    "@polymer/paper-badge": "^3.0.0-pre.26",
    "@polymer/paper-button": "^3.0.0-pre.26",
    "@polymer/paper-icon-button": "^3.0.0-pre.26",
    "@polymer/paper-item": "^3.0.0-pre.26",
    "@polymer/paper-menu-button": "^3.0.0-pre.26",
    "@polymer/paper-spinner": "^3.0.0-pre.26",
    "@polymer/test-fixture": "^4.0.1",
    "@webcomponents/webcomponentsjs": "^2.0.0",
    "wct-browser-legacy": "^1.0.1",
    "webmat": "^0.2.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-Eiv6xd3h3oPmn8SXFntXVfC3ZnegH+KHAxiKLKcOASFSRY3mHnr2AdcnExUJ9ItoCMA5UzKaM/0U22eWzGERtA==",
    "shasum": "9b525249a90a53b6ae249330640b54b12141202a",
    "tarball": "https://registry.npmjs.org/@polymer/iron-list/-/iron-list-3.1.0.tgz",
    "fileCount": 18,
    "unpackedSize": 1089312,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdu3lgCRA9TVsSAnZWagAAdEQP/j7wXgu9MgD1LB1+WAmk\nR1xn8XbI3ioIF26LG/TZyWCnEPOZx7zwwO/6BRIdX5fQQo5TXSMmTcIn8l0b\nTct5YaOFjZQy0XaO55TekmsJV6GodikseQgG0EEswtE4zKUgbkgbOyMRBdcC\n7xy+iKQzMJw9vhG+VFQTWslfWAeGQPFxnieW13hiFr70z8z1+LH17wNV/4vG\nYc64/96sSbPcoW/PyjLregFy4+fTKcsUTMTQXnZ/3mgD/tWL/EY/WdbW7SUG\nJoViRLkY9Tan8a/xT1uo2vdAdbmzHWsCm1Q3YEmA2T8bUXDpWMSFcZR0OwNR\ntQG/HRPx8eGLJUpuGcGw/H2XJcNEzdCA2vtgt82WvoA9muu/02YanbXvNBJb\nS7mB2lCiYB53/yToJ0iAxdfYOgag7ekRoPL1sRP9a0E9uafgE67DGDS35XQq\nl6WL8155NBnFQp1T2Grz1PB2d025cr6VFugcQYjYifo6MKOi5cBUwyaYOYvk\n31CzP/BhI44FpuysaJXN2+iCv075/Vu8XFX673VEkvQMTMFtf/8wN0wLa7e5\nyZW5kedvcqlTM2FMK6IScK9AHQt/D9Nm9ranpXZuN14uSmzJXawQzk9OyXmU\nUjIrsZdbqMPkHwD20SFtgqwX0aUEUP47fyTH4EeI4/hK1htV+gAWzQgsfTQz\nJ/t2\r\n=RGWW\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "6fa05981fccb71fcb59df64852ac1d53d710024d",
  "homepage": "https://github.com/PolymerElements/iron-list",
  "keywords": [
    "web-components",
    "polymer",
    "list",
    "virtual-list"
  ],
  "license": "BSD-3-Clause",
  "main": "iron-list.js",
  "maintainers": [
    {
      "name": "aomarks",
      "email": "aomarks@google.com"
    },
    {
      "name": "azakus",
      "email": "dfreedm2@gmail.com"
    },
    {
      "name": "bicknellr",
      "email": "bicknellr@gmail.com"
    },
    {
      "name": "emarquez",
      "email": "emarquez@google.com"
    },
    {
      "name": "justinfagnani",
      "email": "justin@fagnani.com"
    },
    {
      "name": "polymer-devs",
      "email": "admin@polymer-project.org"
    },
    {
      "name": "sorvell",
      "email": "sorvell@google.com"
    },
    {
      "name": "straversi",
      "email": "straversi@berkeley.edu"
    },
    {
      "name": "tvanderlippe",
      "email": "tvanderlippe@google.com"
    },
    {
      "name": "usergenic",
      "email": "brendan@usergenic.com"
    }
  ],
  "name": "@polymer/iron-list",
  "optionalDependencies": {},
  "readme": "[![Published on NPM](https://img.shields.io/npm/v/@polymer/iron-list.svg)](https://www.npmjs.com/package/@polymer/iron-list)\n[![Build status](https://travis-ci.org/PolymerElements/iron-list.svg?branch=master)](https://travis-ci.org/PolymerElements/iron-list)\n[![Published on webcomponents.org](https://img.shields.io/badge/webcomponents.org-published-blue.svg)](https://webcomponents.org/element/@polymer/iron-list)\n\n## &lt;iron-list&gt;\n`iron-list` displays a virtual, 'infinite' list. The template inside\nthe iron-list element represents the DOM to create for each list item.\nThe `items` property specifies an array of list item data.\n\nFor performance reasons, not every item in the list is rendered at once;\ninstead a small subset of actual template elements *(enough to fill the viewport)*\nare rendered and reused as the user scrolls. As such, it is important that all\nstate of the list template be bound to the model driving it, since the view may\nbe reused with a new model at any time. Particularly, any state that may change\nas the result of a user interaction with the list item must be bound to the model\nto avoid view state inconsistency.\n\n### Sizing iron-list\n\n`iron-list` must either be explicitly sized, or delegate scrolling to an\nexplicitly sized parent. By \"explicitly sized\", we mean it either has an explicit\nCSS `height` property set via a class or inline style, or else is sized by other\nlayout means (e.g. the `flex` or `fit` classes).\n\n#### Flexbox - [jsbin](https://jsbin.com/vejoni/edit?html,output)\n\n```html\n<style>\n  :host {\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n  }\n\n  iron-list {\n    flex: 1;\n  }\n</style>\n<app-toolbar>App name</app-toolbar>\n<iron-list items=\"[[items]]\">\n  <template>\n    <div>\n      ...\n    </div>\n  </template>\n</iron-list>\n```\n#### Explicit size - [jsbin](https://jsbin.com/vopucus/edit?html,output)\n```html\n<style>\n  :host {\n    display: block;\n  }\n\n  iron-list {\n    height: 100vh; /* don't use % values unless the parent element is sized. */\n  }\n</style>\n<iron-list items=\"[[items]]\">\n  <template>\n    <div>\n      ...\n    </div>\n  </template>\n</iron-list>\n```\n#### Main document scrolling - [jsbin](https://jsbin.com/wevirow/edit?html,output)\n```html\n<head>\n  <style>\n    body {\n      margin: 0;\n    }\n  </style>\n</head>\n<body>\n  <iron-list scroll-target=\"document\">\n    <template>\n      <div>\n        ...\n      </div>\n    </template>\n  </iron-list>\n</body>\n```\n\n`iron-list` must be given a `<template>` which contains exactly one element. In the examples\nabove we used a `<div>`, but you can provide any element (including custom elements).\n\n### Template model\n\nList item templates should bind to template models of the following structure:\n\n```js\n{\n  index: 0,        // index in the item array\n  selected: false, // true if the current item is selected\n  tabIndex: -1,    // a dynamically generated tabIndex for focus management\n  item: {}         // user data corresponding to items[index]\n}\n```\n\nAlternatively, you can change the property name used as data index by changing the\n`indexAs` property. The `as` property defines the name of the variable to add to the binding\nscope for the array.\n\nFor example, given the following `data` array:\n\n##### data.json\n\n```js\n[\n  {\"name\": \"Bob\"},\n  {\"name\": \"Tim\"},\n  {\"name\": \"Mike\"}\n]\n```\nThe following code would render the list (note the name property is bound from the model\nobject provided to the template scope):\n```html\n<iron-ajax url=\"data.json\" last-response=\"{{data}}\" auto></iron-ajax>\n<iron-list items=\"[[data]]\" as=\"item\">\n  <template>\n    <div>\n      Name: [[item.name]]\n    </div>\n  </template>\n</iron-list>\n```\n\n### Grid layout\n\n`iron-list` supports a grid layout in addition to linear layout by setting\nthe `grid` attribute.  In this case, the list template item must have both fixed\nwidth and height (e.g. via CSS). Based on this, the number of items\nper row are determined automatically based on the size of the list viewport.\n\n### Accessibility\n\n`iron-list` automatically manages the focus state for the items. It also provides\na `tabIndex` property within the template scope that can be used for keyboard navigation.\nFor example, users can press the up and down keys, as well as the left and right\nkeys (the `grid` attribute is present), to move to focus between items in the list:\n\n```html\n<iron-list items=\"[[data]]\" as=\"item\">\n  <template>\n    <div tabindex$=\"[[tabIndex]]\">\n      Name: [[item.name]]\n    </div>\n  </template>\n</iron-list>\n```\n\n### Styling\n\nYou can use the `--iron-list-items-container` mixin to style the container of items:\n\n```css\niron-list {\n --iron-list-items-container: {\n    margin: auto;\n  };\n}\n```\n\n### Resizing\n\n`iron-list` lays out the items when it receives a notification via the `iron-resize` event.\nThis event is fired by any element that implements `IronResizableBehavior`.\n\nBy default, elements such as `iron-pages`, `paper-tabs` or `paper-dialog` will trigger\nthis event automatically. If you hide the list manually (e.g. you use `display: none`)\nyou might want to implement `IronResizableBehavior` or fire this event manually right\nafter the list became visible again. For example:\n\n```js\ndocument.querySelector('iron-list').fire('iron-resize');\n```\n\n### When should `<iron-list>` be used?\n\n`iron-list` should be used when a page has significantly more DOM nodes than the ones\nvisible on the screen. e.g. the page has 500 nodes, but only 20 are visible at a time.\nThis is why we refer to it as a `virtual` list. In this case, a `dom-repeat` will still\ncreate 500 nodes which could slow down the web app, but `iron-list` will only create 20.\n\nHowever, having an `iron-list` does not mean that you should load all the data at once.\nFor example, if you have a million records in the database, it is better split the data into pages\nso you can bring in a page at a time. The page could contain 500 items, and iron-list\nmight only render 20.\n\nSee: [Documentation](https://www.webcomponents.org/element/@polymer/iron-list),\n  [Demo](https://www.webcomponents.org/element/@polymer/iron-list/demo/demo/index.html).\n\n## Usage\n\n### Installation\n```\nnpm install --save @polymer/iron-list\n```\n\n### In a Polymer 3 element\n```js\nimport {PolymerElement, html} from '@polymer/polymer';\nimport '@polymer/iron-list/iron-list.js';\n\nclass SampleElement extends PolymerElement {\n  static get template() {\n    return html`\n      <style>\n        :host {\n          display: block;\n        }\n\n        iron-list {\n          height: 100vh; /* don't use % values unless the parent element is sized. */\n        }\n      </style>\n      <iron-list items=\"[[items]]\">\n        <template>\n          <div>\n            ...\n          </div>\n        </template>\n      </iron-list>\n    `;\n  }\n}\ncustomElements.define('sample-element', SampleElement);\n```\n\n## Contributing\nIf you want to send a PR to this element, here are\nthe instructions for running the tests and demo locally:\n\n### Installation\n```sh\ngit clone https://github.com/PolymerElements/iron-list\ncd iron-list\nnpm install\nnpm install -g polymer-cli\n```\n\n### Running the demo locally\n```sh\npolymer serve --npm\nopen http://127.0.0.1:<port>/demo/\n```\n\n### Running the tests\n```sh\npolymer test --npm\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/PolymerElements/iron-list.git"
  },
  "scripts": {
    "format": "webmat",
    "generate-types": "gen-typescript-declarations --deleteExisting --outDir . --verify",
    "prepare": "npm run generate-types"
  },
  "version": "3.1.0"
}
